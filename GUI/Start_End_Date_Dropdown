######################################################################
## Create a dropdown menu to get a start and end date from the user ##
##                                                                  ##
######################################################################


from tkinter import Tk
from tkinter import *


master = Tk()       #main window

master.attributes("-topmost", True)      #makes the dialog appear on top

#need a list of possible days of month and years
dates=[x for x in np.arange(1,32)]
years=[x for x in np.arange(2018,2030)]

#next lines create the first month dropdown for start date
variable1 = StringVar(master)   #store start month here
variable1.set("January")        # default value
w = OptionMenu(master, variable1, 'January','February', 'March','April', 'May',
               'June', 'July', 'August', 'September', 'October', 'November', 'December')
w.grid(row=1, sticky=W, column=0)

#Create days of month part of dropdown for start date
variable2 = StringVar(master)         #store day of month here
variable2.set(1) # default value
w2 = OptionMenu(master, variable2, *dates)
w2.grid(row=1, sticky=W, column=1)

#create year dropdown for start date
variable3 = StringVar(master)        # store start year here
variable3.set(2018)                  # default value
w3 = OptionMenu(master, variable3, *years)
w3.grid(row=1, sticky=W, column=2)

#create dropdown for end month
variable4 = StringVar(master)
variable4.set('January') # default value
w4 = OptionMenu(master, variable4, 'January','February', 'March','April', 'May',
               'June', 'July', 'August', 'September', 'October', 'November', 'December')
w4.grid(row=3, sticky=W, column=0)

#create end day of month var
variable5 = StringVar(master)    #store end day of month
variable5.set(31)                # default value
w5 = OptionMenu(master, variable5, *dates)
w5.grid(row=3, sticky=W, column=1)

#create end year var
variable6 = StringVar(master)    #store end year
variable6.set(2018)              # default value
w6 = OptionMenu(master, variable6, *years)
w6.grid(row=3, sticky=W, column=2)

#need these dicts if want to get date as number's only
mon_dict={'January':1,'February':2, 'March':3,'April':4, 'May':5,
               'June':6, 'July':7, 'August':8, 'Spetember':9, 'October':10, 
               'November':11, 'December':12}
mon__len_dict={'January':31,'February':28, 'March':31,'April':30, 'May':31,
               'June':30, 'July':31, 'August':31, 'September':30, 'October':31, 
               'November':30, 'December':31}

#if the user wants to, they can specify the beginning of a month
#and automatically fill the end of the month. Wont work for leap
#years in february, so possiblility to fix here.
def auto_get():
    variable4.set(variable1.get())
    variable5.set(mon__len_dict.get(variable1.get()))
    variable6.set(variable3.get()) # default value

#when user presses okay, get dates. This data format is specific to 
#Kristy's antelope island code. Formatting can be done in date1 and date2
#vars
def quit():
    global date1
    global date2
    date1=(variable3.get(), mon_dict.get(variable1.get()), variable2.get())
    date2=(variable6.get(), mon_dict.get(variable4.get()),  variable5.get())
    master.destroy()

#create the auto end date button
Autoset = Button(master, text="Auto \n End Date", command=auto_get)
Autoset.grid(row=0, sticky=W, column=5)

#create the quit button
button = Button(master, text="OK", command=quit)
button.grid(row=5, sticky=W, column=2)

#add some labels in the window so the user knows what to do
labelText=StringVar()
labelText.set("Choose State Date")
label1=Label(master, textvariable=labelText, height=4)
label1.grid(row=0, sticky=W, column=1, columnspan=2)

labelText=StringVar()
labelText.set("Choose End Date")
label1=Label(master, textvariable=labelText, height=4)
label1.grid(row=2, sticky=W, column=1)


mainloop()
